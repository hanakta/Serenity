<?php
// üê± –°–µ—Ä–≤–∏—Å –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è Serenity

namespace App\Services;

class ValidationService
{
    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
     */
    public function validateRegistration(array $data): array
    {
        $errors = [];

        // –í–∞–ª–∏–¥–∞—Ü–∏—è email
        if (empty($data['email'])) {
            $errors['email'] = 'Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
        } elseif (!filter_var($data['email'], FILTER_VALIDATE_EMAIL)) {
            $errors['email'] = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email';
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –∏–º–µ–Ω–∏
        if (empty($data['name'])) {
            $errors['name'] = '–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
        } elseif (strlen($data['name']) < 2) {
            $errors['name'] = '–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞';
        } elseif (strlen($data['name']) > 100) {
            $errors['name'] = '–ò–º—è –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 100 —Å–∏–º–≤–æ–ª–æ–≤';
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è
        if (empty($data['password'])) {
            $errors['password'] = '–ü–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
        } elseif (strlen($data['password']) < 8) {
            $errors['password'] = '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤';
        } elseif (!preg_match('/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)/', $data['password'])) {
            $errors['password'] = '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º –æ–¥–Ω—É —Å—Ç—Ä–æ—á–Ω—É—é –±—É–∫–≤—É, –æ–¥–Ω—É –∑–∞–≥–ª–∞–≤–Ω—É—é –±—É–∫–≤—É –∏ –æ–¥–Ω—É —Ü–∏—Ñ—Ä—É';
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
        if (empty($data['confirmPassword'])) {
            $errors['confirmPassword'] = '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
        } elseif ($data['password'] !== $data['confirmPassword']) {
            $errors['confirmPassword'] = '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç';
        }

        return $errors;
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≤—Ö–æ–¥–∞
     */
    public function validateLogin(array $data): array
    {
        $errors = [];

        if (empty($data['email'])) {
            $errors['email'] = 'Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
        } elseif (!filter_var($data['email'], FILTER_VALIDATE_EMAIL)) {
            $errors['email'] = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email';
        }

        if (empty($data['password'])) {
            $errors['password'] = '–ü–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
        }

        return $errors;
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á–∏
     */
    public function validateTask(array $data): array
    {
        $errors = [];

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
        if (empty($data['title'])) {
            $errors['title'] = '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–¥–∞—á–∏ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
        } elseif (strlen($data['title']) > 500) {
            $errors['title'] = '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 500 —Å–∏–º–≤–æ–ª–æ–≤';
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è
        if (isset($data['description']) && strlen($data['description']) > 2000) {
            $errors['description'] = '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 2000 —Å–∏–º–≤–æ–ª–æ–≤';
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–∞
        if (isset($data['status'])) {
            $validStatuses = ['todo', 'in_progress', 'completed', 'cancelled'];
            if (!in_array($data['status'], $validStatuses)) {
                $errors['status'] = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏';
            }
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
        if (isset($data['priority'])) {
            $validPriorities = ['low', 'medium', 'high', 'urgent'];
            if (!in_array($data['priority'], $validPriorities)) {
                $errors['priority'] = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞–¥–∞—á–∏';
            }
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        if (isset($data['category'])) {
            $validCategories = ['personal', 'work', 'health', 'learning', 'shopping', 'other'];
            if (!in_array($data['category'], $validCategories)) {
                $errors['category'] = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∑–∞–¥–∞—á–∏';
            }
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        if (isset($data['due_date']) && !empty($data['due_date'])) {
            $dueDate = strtotime($data['due_date']);
            if ($dueDate === false) {
                $errors['due_date'] = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã';
            }
            // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –ø—Ä–æ—à–ª–æ–µ –≤—Ä–µ–º—è, —Ç–∞–∫ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞–¥–∞—á–∏ —Å –ø—Ä–æ—à–µ–¥—à–∏–º–∏ –¥–∞—Ç–∞–º–∏
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–≥–æ–≤
        if (isset($data['tags']) && is_array($data['tags'])) {
            foreach ($data['tags'] as $tag) {
                if (!is_string($tag) || strlen($tag) > 100) {
                    $errors['tags'] = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Ç–µ–≥–∏';
                    break;
                }
            }
        }

        return $errors;
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞
     */
    public function validateProject(array $data): array
    {
        $errors = [];

        if (empty($data['name'])) {
            $errors['name'] = '–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
        } elseif (strlen($data['name']) > 255) {
            $errors['name'] = '–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 255 —Å–∏–º–≤–æ–ª–æ–≤';
        }

        if (isset($data['description']) && strlen($data['description']) > 1000) {
            $errors['description'] = '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 1000 —Å–∏–º–≤–æ–ª–æ–≤';
        }

        if (isset($data['color']) && !preg_match('/^#[0-9A-Fa-f]{6}$/', $data['color'])) {
            $errors['color'] = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ü–≤–µ—Ç–∞';
        }

        return $errors;
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    public function validateUserUpdate(array $data): array
    {
        $errors = [];

        if (isset($data['name'])) {
            if (empty($data['name'])) {
                $errors['name'] = '–ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º';
            } elseif (strlen($data['name']) < 2) {
                $errors['name'] = '–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞';
            } elseif (strlen($data['name']) > 100) {
                $errors['name'] = '–ò–º—è –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 100 —Å–∏–º–≤–æ–ª–æ–≤';
            }
        }

        if (isset($data['email'])) {
            if (empty($data['email'])) {
                $errors['email'] = 'Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
            } elseif (!filter_var($data['email'], FILTER_VALIDATE_EMAIL)) {
                $errors['email'] = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email';
            }
        }

        if (isset($data['password'])) {
            if (strlen($data['password']) < 8) {
                $errors['password'] = '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤';
            } elseif (!preg_match('/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)/', $data['password'])) {
                $errors['password'] = '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º –æ–¥–Ω—É —Å—Ç—Ä–æ—á–Ω—É—é –±—É–∫–≤—É, –æ–¥–Ω—É –∑–∞–≥–ª–∞–≤–Ω—É—é –±—É–∫–≤—É –∏ –æ–¥–Ω—É —Ü–∏—Ñ—Ä—É';
            }
        }

        if (isset($data['avatar']) && !filter_var($data['avatar'], FILTER_VALIDATE_URL)) {
            $errors['avatar'] = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL –∞–≤–∞—Ç–∞—Ä–∞';
        }

        return $errors;
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
     */
    public function validateTeamCreation(array $data): array
    {
        $errors = [];

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
        if (empty($data['name'])) {
            $errors['name'] = '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
        } elseif (strlen($data['name']) < 2) {
            $errors['name'] = '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞';
        } elseif (strlen($data['name']) > 255) {
            $errors['name'] = '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 255 —Å–∏–º–≤–æ–ª–æ–≤';
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è
        if (isset($data['description']) && strlen($data['description']) > 1000) {
            $errors['description'] = '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 1000 —Å–∏–º–≤–æ–ª–æ–≤';
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ü–≤–µ—Ç–∞
        if (isset($data['color']) && !preg_match('/^#[0-9A-Fa-f]{6}$/', $data['color'])) {
            $errors['color'] = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ü–≤–µ—Ç–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å #RRGGBB)';
        }

        return $errors;
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
     */
    public function validatePagination(array $data): array
    {
        $errors = [];

        if (isset($data['page'])) {
            $page = (int) $data['page'];
            if ($page < 1) {
                $errors['page'] = '–ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 0';
            }
        }

        if (isset($data['limit'])) {
            $limit = (int) $data['limit'];
            if ($limit < 1 || $limit > 100) {
                $errors['limit'] = '–õ–∏–º–∏—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 100';
            }
        }

        return $errors;
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è UUID
     */
    public function validateUUID(string $uuid): bool
    {
        return preg_match('/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i', $uuid) === 1;
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è ID –∑–∞–¥–∞—á–∏ (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–∞–∫ UUID, —Ç–∞–∫ –∏ task_xxx —Ñ–æ—Ä–º–∞—Ç)
     */
    public function validateTaskId(string $taskId): bool
    {
        // UUID —Ñ–æ—Ä–º–∞—Ç
        if (preg_match('/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i', $taskId) === 1) {
            return true;
        }
        
        // task_xxx —Ñ–æ—Ä–º–∞—Ç
        if (preg_match('/^task_[a-f0-9]+\.[0-9]+$/', $taskId) === 1) {
            return true;
        }
        
        // –î—Ä—É–≥–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã ID (–Ω–∞–ø—Ä–∏–º–µ—Ä, task_1_123)
        if (preg_match('/^task_\d+_\d+$/', $taskId) === 1) {
            return true;
        }
        
        return false;
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ (–≤—Å–µ –ø–æ–ª—è –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã)
     */
    public function validateTaskUpdate(array $data): array
    {
        $errors = [];

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω)
        if (isset($data['title'])) {
            if (empty($data['title'])) {
                $errors['title'] = '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–¥–∞—á–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º';
            } elseif (strlen($data['title']) > 500) {
                $errors['title'] = '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 500 —Å–∏–º–≤–æ–ª–æ–≤';
            }
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–æ)
        if (isset($data['description']) && strlen($data['description']) > 2000) {
            $errors['description'] = '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 2000 —Å–∏–º–≤–æ–ª–æ–≤';
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–∞ (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω)
        if (isset($data['status'])) {
            $validStatuses = ['todo', 'in_progress', 'completed', 'cancelled'];
            if (!in_array($data['status'], $validStatuses)) {
                $errors['status'] = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏';
            }
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω)
        if (isset($data['priority'])) {
            $validPriorities = ['low', 'medium', 'high', 'urgent'];
            if (!in_array($data['priority'], $validPriorities)) {
                $errors['priority'] = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞–¥–∞—á–∏';
            }
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–∞)
        if (isset($data['category'])) {
            $validCategories = ['personal', 'work', 'health', 'learning', 'shopping', 'other'];
            if (!in_array($data['category'], $validCategories)) {
                $errors['category'] = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∑–∞–¥–∞—á–∏';
            }
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–∞)
        if (isset($data['due_date'])) {
            if ($data['due_date'] !== null && !strtotime($data['due_date'])) {
                $errors['due_date'] = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è';
            }
        }

        return $errors;
    }


    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
     */
    public function validateProfileUpdate(array $data): array
    {
        $errors = [];

        if (isset($data['name'])) {
            if (empty(trim($data['name']))) {
                $errors['name'] = '–ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º';
            } elseif (strlen(trim($data['name'])) < 2) {
                $errors['name'] = '–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞';
            } elseif (strlen(trim($data['name'])) > 100) {
                $errors['name'] = '–ò–º—è –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 100 —Å–∏–º–≤–æ–ª–æ–≤';
            }
        }

        if (isset($data['email'])) {
            if (empty(trim($data['email']))) {
                $errors['email'] = 'Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
            } elseif (!filter_var(trim($data['email']), FILTER_VALIDATE_EMAIL)) {
                $errors['email'] = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email';
            }
        }

        if (isset($data['password'])) {
            if (strlen($data['password']) < 6) {
                $errors['password'] = '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤';
            } elseif (strlen($data['password']) > 100) {
                $errors['password'] = '–ü–∞—Ä–æ–ª—å –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 100 —Å–∏–º–≤–æ–ª–æ–≤';
            }
        }

        return [
            'valid' => empty($errors),
            'errors' => $errors
        ];
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è
     */
    public function validatePasswordChange(array $data): array
    {
        $errors = [];

        if (empty($data['current_password'])) {
            $errors['current_password'] = '–¢–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
        }

        if (empty($data['new_password'])) {
            $errors['new_password'] = '–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
        } elseif (strlen($data['new_password']) < 8) {
            $errors['new_password'] = '–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤';
        } elseif (!preg_match('/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)/', $data['new_password'])) {
            $errors['new_password'] = '–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º –æ–¥–Ω—É —Å—Ç—Ä–æ—á–Ω—É—é –±—É–∫–≤—É, –æ–¥–Ω—É –∑–∞–≥–ª–∞–≤–Ω—É—é –±—É–∫–≤—É –∏ –æ–¥–Ω—É —Ü–∏—Ñ—Ä—É';
        }

        if (isset($data['new_password']) && isset($data['current_password']) && $data['new_password'] === $data['current_password']) {
            $errors['new_password'] = '–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ';
        }

        return [
            'valid' => empty($errors),
            'errors' => $errors
        ];
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
     */
    public function validateImageFile(array $file): array
    {
        $errors = [];

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω
        if (!isset($file['tmp_name']) || !is_uploaded_file($file['tmp_name'])) {
            $errors['file'] = '–§–∞–π–ª –Ω–µ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω';
            return ['valid' => false, 'errors' => $errors];
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
        if (isset($file['error']) && $file['error'] !== UPLOAD_ERR_OK) {
            $errors['file'] = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞';
            return ['valid' => false, 'errors' => $errors];
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–º–∞–∫—Å–∏–º—É–º 5MB)
        if ($file['size'] > 5 * 1024 * 1024) {
            $errors['file'] = '–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 5MB';
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
        $allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];
        $fileType = mime_content_type($file['tmp_name']);
        
        if (!in_array($fileType, $allowedTypes)) {
            $errors['file'] = '–†–∞–∑—Ä–µ—à–µ–Ω—ã —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–∞—Ö JPEG, PNG, GIF, WebP';
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        $allowedExtensions = ['jpg', 'jpeg', 'png', 'gif', 'webp'];
        $fileExtension = strtolower(pathinfo($file['name'], PATHINFO_EXTENSION));
        
        if (!in_array($fileExtension, $allowedExtensions)) {
            $errors['file'] = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞';
        }

        return [
            'valid' => empty($errors),
            'errors' => $errors
        ];
    }

    /**
     * –°–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–æ–∫–∏
     */
    public function sanitizeString(string $string): string
    {
        return trim(htmlspecialchars($string, ENT_QUOTES, 'UTF-8'));
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫
     */
    public function sanitizeStringArray(array $strings): array
    {
        return array_map([$this, 'sanitizeString'], $strings);
    }


    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ –∫–æ–º–∞–Ω–¥—É
     */
    public function validateTeamInvitation(array $data): array
    {
        $errors = [];

        // –í–∞–ª–∏–¥–∞—Ü–∏—è email
        if (empty($data['email'])) {
            $errors['email'] = 'Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
        } elseif (!filter_var($data['email'], FILTER_VALIDATE_EMAIL)) {
            $errors['email'] = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email';
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–æ–ª–∏
        if (!empty($data['role']) && !in_array($data['role'], ['admin', 'member', 'viewer'])) {
            $errors['role'] = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ä–æ–ª—å. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏: admin, member, viewer';
        }

        return $errors;
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∫ –∑–∞–¥–∞—á–µ
     */
    public function validateTaskComment(array $data): array
    {
        $errors = [];

        // –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
        if (empty($data['content'])) {
            $errors['content'] = '–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
        } elseif (strlen($data['content']) < 1) {
            $errors['content'] = '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º';
        } elseif (strlen($data['content']) > 1000) {
            $errors['content'] = '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 1000 —Å–∏–º–≤–æ–ª–æ–≤';
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è ID –∑–∞–¥–∞—á–∏
        if (empty($data['task_id'])) {
            $errors['task_id'] = 'ID –∑–∞–¥–∞—á–∏ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
        }

        return $errors;
    }
}
