// üê± –û–±—â–∏–µ —Ç–∏–ø—ã –¥–ª—è Serenity - –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∑–∞–¥–∞—á

// –¢–∏–ø—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export interface User {
  id: string;
  email: string;
  name: string;
  avatar?: string;
  createdAt: Date;
  updatedAt: Date;
}

// –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –∑–∞–¥–∞—á —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏ –∏–∫–æ–Ω–∫–∞–º–∏
export enum TaskPriority {
  LOW = 'low',      // üê∞ –ö—Ä–æ–ª–∏–∫ - –±—ã—Å—Ç—Ä—ã–µ –∑–∞–¥–∞—á–∏
  MEDIUM = 'medium', // üê± –ö–æ—Ç - –æ–±—ã—á–Ω—ã–µ –∑–∞–¥–∞—á–∏
  HIGH = 'high',     // üê∂ –°–æ–±–∞–∫–∞ - –≤–∞–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏
  URGENT = 'urgent'  // üê∏ –õ—è–≥—É—à–∫–∞ - —Å—Ä–æ—á–Ω—ã–µ –∑–∞–¥–∞—á–∏
}

// –°—Ç–∞—Ç—É—Å—ã –∑–∞–¥–∞—á
export enum TaskStatus {
  TODO = 'todo',
  IN_PROGRESS = 'in_progress',
  COMPLETED = 'completed',
  CANCELLED = 'cancelled'
}

// –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–¥–∞—á —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏ –∏–∫–æ–Ω–∫–∞–º–∏
export enum TaskCategory {
  PERSONAL = 'personal',     // üê± –ö–æ—Ç - –ª–∏—á–Ω—ã–µ –∑–∞–¥–∞—á–∏
  WORK = 'work',             // üê∂ –°–æ–±–∞–∫–∞ - —Ä–∞–±–æ—á–∏–µ –∑–∞–¥–∞—á–∏
  CREATIVE = 'creative',     // ü¶ä –õ–∏—Å–∞ - —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏
  HEALTH = 'health',         // üê∞ –ö—Ä–æ–ª–∏–∫ - –∑–¥–æ—Ä–æ–≤—å–µ
  LEARNING = 'learning',     // üê∏ –õ—è–≥—É—à–∫–∞ - –æ–±—É—á–µ–Ω–∏–µ
  OTHER = 'other'            // üêæ –û–±—â–∏–µ –∑–∞–¥–∞—á–∏
}

// –û—Å–Ω–æ–≤–Ω–∞—è –º–æ–¥–µ–ª—å –∑–∞–¥–∞—á–∏
export interface Task {
  id: string;
  title: string;
  description?: string;
  status: TaskStatus;
  priority: TaskPriority;
  category: TaskCategory;
  dueDate?: Date;
  completedAt?: Date;
  userId: string;
  projectId?: string;
  tags: string[];
  createdAt: Date;
  updatedAt: Date;
}

// –ú–æ–¥–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞
export interface Project {
  id: string;
  name: string;
  description?: string;
  color: string;
  userId: string;
  tasks: Task[];
  createdAt: Date;
  updatedAt: Date;
}

// –¢–µ–≥–∏ –¥–ª—è –∑–∞–¥–∞—á
export interface Tag {
  id: string;
  name: string;
  color: string;
  userId: string;
  createdAt: Date;
}

// API –æ—Ç–≤–µ—Ç—ã
export interface ApiResponse<T> {
  success: boolean;
  data?: T;
  error?: string;
  message?: string;
}

// –ü–∞–≥–∏–Ω–∞—Ü–∏—è
export interface PaginationParams {
  page: number;
  limit: number;
  sortBy?: string;
  sortOrder?: 'asc' | 'desc';
}

export interface PaginatedResponse<T> {
  data: T[];
  pagination: {
    page: number;
    limit: number;
    total: number;
    totalPages: number;
  };
}

// –§–∏–ª—å—Ç—Ä—ã –¥–ª—è –∑–∞–¥–∞—á
export interface TaskFilters {
  status?: TaskStatus[];
  priority?: TaskPriority[];
  category?: TaskCategory[];
  projectId?: string;
  tags?: string[];
  dueDateFrom?: Date;
  dueDateTo?: Date;
  search?: string;
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export interface UserSettings {
  theme: 'light' | 'dark' | 'system';
  notifications: {
    email: boolean;
    push: boolean;
    reminders: boolean;
  };
  defaultView: 'list' | 'kanban' | 'calendar';
  timezone: string;
}

// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
export interface ProductivityStats {
  totalTasks: number;
  completedTasks: number;
  completionRate: number;
  tasksByPriority: Record<TaskPriority, number>;
  tasksByCategory: Record<TaskCategory, number>;
  averageCompletionTime: number; // –≤ —á–∞—Å–∞—Ö
  streak: number; // –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥ —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏
}

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
export interface Notification {
  id: string;
  type: 'task_due' | 'task_completed' | 'project_update' | 'team_invite';
  title: string;
  message: string;
  userId: string;
  read: boolean;
  createdAt: Date;
}

// –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö —Ç–∏–ø–æ–≤
export * from './api';
export * from './forms';
